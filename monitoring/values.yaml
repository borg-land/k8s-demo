grafana:
  resources:
   limits:
     cpu: 4000m
     memory: 2048Mi
   requests:
     cpu: 500m
     memory: 1024Mi
  env:
    AWS_ROLE_ARN: arn:aws:iam::760591208458:role/gke-to-aws
    AWS_WEB_IDENTITY_TOKEN_FILE: /var/run/secrets/aws-iam-token/serviceaccount/token
    AWS_REGION: eu-central-1
    AWS_ROLE_SESSION_NAME: grafana
  extraSecretMounts:
    - name: aws-iam-token
      readOnly: true
      mountPath: /var/run/secrets/aws-iam-token/serviceaccount
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: sts.amazonaws.com
            expirationSeconds: 86400
            path: token
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
    datasources:
      defaultDatasourceEnabled: false
  serviceAccount:
    create: true
    name: grafana
    annotations:
      iam.gke.io/gcp-service-account: grafana@coen-mahamed-ali.iam.gserviceaccount.com
  deploymentStrategy:
    type: Recreate # blame the PVC but this should be infrequent
  persistence:
    enabled: true
    size: 50Gi
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://frontend.monitoring:9090
          access: proxy
          timeout: 120
          isDefault: true
  plugins:
    - grafana-worldmap-panel
    - grafana-piechart-panel
    - grafana-polystat-panel
    - grafana-x-ray-datasource
    - grafana-athena-datasource
  # extraSecretMounts:
  #   - name: grafana-oauth
  #     secretName: grafana-oauth
  #     defaultMode: 0440
  #     mountPath: /etc/secrets/oauth
  #     readOnly: true
  grafana.ini:
    feature_toggles:
      publicDashboards: "true"
    server:
      root_url: https://grafana.knative.dev
    auth.github:
      enabled: false
      allow_sign_up: true
      scopes: user:email,read:org
      auth_url: https://github.com/login/oauth/authorize
      token_url: https://github.com/login/oauth/access_token
      api_url: https://api.github.com/user
      # role_attribute_path: contains(groups[*], '@knative/productivity-wg-leads') && 'Admin' || contains(groups[*], '@knative/productivity-writers') && 'Editor' || 'Viewer'

# mimir-distributed:
  # alertmanager:
  #   persistentVolume:
  #     enabled: true
  #   replicas: 2
  #   resources:
  #     limits:
  #       memory: 1.4Gi
  #     requests:
  #       cpu: 1
  #       memory: 1Gi
  #   statefulSet:
  #     enabled: true

  # compactor:
  #   persistentVolume:
  #     size: 20Gi
  #   resources:
  #     limits:
  #       memory: 2.1Gi
  #     requests:
  #       cpu: 1
  #       memory: 1.5Gi

  # distributor:
  #   replicas: 2
  #   resources:
  #     limits:
  #       memory: 5.7Gi
  #     requests:
  #       cpu: 2
  #       memory: 4Gi

  # ingester:
  #   persistentVolume:
  #     size: 50Gi
  #   replicas: 3
  #   resources:
  #     limits:
  #       memory: 12Gi
  #     requests:
  #       cpu: 3.5
  #       memory: 8Gi
  #   topologySpreadConstraints: {}
  #   affinity:
  #     podAntiAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         - labelSelector:
  #             matchExpressions:
  #               - key: target # support for enterprise.legacyLabels
  #                 operator: In
  #                 values:
  #                   - ingester
  #           topologyKey: 'kubernetes.io/hostname'

  #         - labelSelector:
  #             matchExpressions:
  #               - key: app.kubernetes.io/component
  #                 operator: In
  #                 values:
  #                   - ingester
  #           topologyKey: 'kubernetes.io/hostname'

  #   zoneAwareReplication:
  #     topologyKey: 'kubernetes.io/hostname'

  # chunks-cache:
  #   enabled: true
  #   replicas: 2

  # index-cache:
  #   enabled: true
  #   replicas: 3

  # metadata-cache:
  #   enabled: true

  # results-cache:
  #   enabled: true
  #   replicas: 2

  # minio:
  #   enabled: false

  # overrides_exporter:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 128Mi
  #     requests:
  #       cpu: 100m
  #       memory: 128Mi

  # querier:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 5.6Gi
  #     requests:
  #       cpu: 2
  #       memory: 4Gi

  # query_frontend:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 2.8Gi
  #     requests:
  #       cpu: 2
  #       memory: 2Gi

  # ruler:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 2.8Gi
  #     requests:
  #       cpu: 1
  #       memory: 2Gi

  # store_gateway:
  #   persistentVolume:
  #     size: 10Gi
  #   replicas: 3
  #   resources:
  #     limits:
  #       memory: 2.1Gi
  #     requests:
  #       cpu: 1
  #       memory: 1.5Gi
  #   topologySpreadConstraints: {}
  #   affinity:
  #     podAntiAffinity:
  #       requiredDuringSchedulingIgnoredDuringExecution:
  #         - labelSelector:
  #             matchExpressions:
  #               - key: target # support for enterprise.legacyLabels
  #                 operator: In
  #                 values:
  #                   - store-gateway
  #           topologyKey: 'kubernetes.io/hostname'

  #         - labelSelector:
  #             matchExpressions:
  #               - key: app.kubernetes.io/component
  #                 operator: In
  #                 values:
  #                   - store-gateway
  #           topologyKey: 'kubernetes.io/hostname'
  #   zoneAwareReplication:
  #     topologyKey: 'kubernetes.io/hostname'

  # nginx:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 731Mi
  #     requests:
  #       cpu: 1
  #       memory: 512Mi

  # # Grafana Enterprise Metrics feature related
  # admin_api:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 128Mi
  #     requests:
  #       cpu: 100m
  #       memory: 64Mi

  # gateway:
  #   replicas: 1
  #   resources:
  #     limits:
  #       memory: 731Mi
  #     requests:
  #       cpu: 1
  #       memory: 512Mi
